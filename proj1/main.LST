A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     1


MACRO ASSEMBLER A51 V8.01
OBJECT MODULE PLACED IN main.OBJ
ASSEMBLER INVOKED BY: C:\Keil8051\C51\BIN\A51.EXE main.asm NOMOD51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;#include <reg932.inc>
                +1     2     ;*******************************************************************
                +1     3     ;   P89LPC932 Special Function Registers
                +1     4     ;*******************************************************************
                +1     5     ;
                +1     6     ;******* System ****************
  00E0          +1     7     ACC         DATA        0xE0
  00F0          +1     8     B           DATA        0xF0
  0081          +1     9     SP          DATA        0x81
  0082          +1    10     DPL         DATA        0x82
  0083          +1    11     DPH         DATA        0x83
  00DF          +1    12     RSTSRC  DATA    0xDF
  0087          +1    13     PCON    DATA    0x87
  00B5          +1    14     PCONA   DATA    0xB5
  00D0          +1    15     PSW         DATA        0xD0
  0095          +1    16     DIVM    DATA    0x95
  0096          +1    17     TRIM    DATA    0x96
  00A2          +1    18     AUXR1   DATA    0xA2
                +1    19     ;------- Bit Addressable -------
  00D7          +1    20     CY          BIT     0xD7
  00D6          +1    21     AC          BIT     0xD6
  00D5          +1    22     F0          BIT     0xD5
  00D4          +1    23     RS1         BIT     0xD4
  00D3          +1    24     RS0         BIT     0xD3
  00D2          +1    25     OV          BIT     0xD2
  00D1          +1    26     F1          BIT     0xD1
  00D0          +1    27     P           BIT     0xD0
  00B1          +1    28     XTAL1   BIT         0xB1
  00B0          +1    29     XTAL2   BIT         0xB0
                +1    30     ;******* Ports *****************
  0080          +1    31     P0          DATA        0x80
  0084          +1    32     P0M1    DATA    0x84
  0085          +1    33     P0M2    DATA    0x85
  00F6          +1    34     PT0AD   DATA    0xF6
  0090          +1    35     P1          DATA        0x90
  0091          +1    36     P1M1    DATA    0x91
  0092          +1    37     P1M2    DATA    0x92
  00A0          +1    38     P2          DATA        0xA0
  00A4          +1    39     P2M1    DATA    0xA4
  00A5          +1    40     P2M2    DATA    0xA5
  00B0          +1    41     P3          DATA        0xB0
  00B1          +1    42     P3M1    DATA    0xB1
  00B2          +1    43     P3M2    DATA    0xB2
                +1    44     ;******* EEPROM ****************
  00F1          +1    45     DEECON  DATA    0xF1
  00F2          +1    46     DEEDAT  DATA    0xF2
  00F3          +1    47     DEEADR  DATA    0xF3
                +1    48     ;******* Keypad ****************
  0086          +1    49     KBMASK  DATA    0x86
  0093          +1    50     KBPATN  DATA    0x93
  0094          +1    51     KBCON   DATA    0x94
                +1    52     ;------- Bit Addressable -------
  0080          +1    53     KB0         BIT     0x80
  0081          +1    54     KB1         BIT     0x81
  0082          +1    55     KB2         BIT     0x82
  0083          +1    56     KB3         BIT     0x83
  0084          +1    57     KB4         BIT     0x84
  0085          +1    58     KB5         BIT     0x85
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     2

  0086          +1    59     KB6         BIT     0x86
  0087          +1    60     KB7         BIT     0x87
                +1    61     ;******* Comparators ***********
  00AC          +1    62     CMP1    DATA    0xAC
  00AD          +1    63     CMP2    DATA    0xAD
                +1    64     ;------- Bit Addressable -------
  0086          +1    65     CMP1O   BIT     0x86
  0085          +1    66     CMPREF  BIT     0x85
  0084          +1    67     CIN1A   BIT     0x84
  0083          +1    68     CIN1B   BIT     0x83
  0082          +1    69     CIN2A   BIT     0x82
  0081          +1    70     CIN2B   BIT     0x81
  0080          +1    71     CMP2O   BIT     0x80
                +1    72     ;******* Serial Port ***********
  0098          +1    73     SCON    DATA    0x98
  0099          +1    74     SBUF    DATA    0x99
  00A9          +1    75     SADDR   DATA    0xA9
  00B9          +1    76     SADEN   DATA    0xB9
  00BA          +1    77     SSTAT   DATA    0xBA
  00BD          +1    78     BRGCON  DATA    0xBD
  00BE          +1    79     BRGR0   DATA    0xBE
  00BF          +1    80     BRGR1   DATA    0xBF
                +1    81     ;------- Bit Addressable -------
  009F          +1    82     FE          BIT     0x9F
  009F          +1    83     SM0         BIT     0x9F
  009E          +1    84     SM1         BIT     0x9E
  009D          +1    85     SM2         BIT     0x9D
  009C          +1    86     REN         BIT     0x9C
  009B          +1    87     TB8         BIT     0x9B
  009A          +1    88     RB8         BIT     0x9A
  0099          +1    89     TI          BIT     0x99
  0098          +1    90     RI          BIT     0x98
  0091          +1    91     RxD         BIT     0x91
  0090          +1    92     TxD         BIT     0x90
                +1    93     ;******* SPI *******************
  00E1          +1    94     SPSTAT  DATA    0xE1
  00E2          +1    95     SPCTL   DATA    0xE2
  00E3          +1    96     SPDAT   DATA    0xE3
                +1    97     ;------- Bit Addressable -------
  00A5          +1    98     SPICLK  BIT         0xA5
  00A4          +1    99     SS          BIT     0xA4
  00A3          +1   100     MISO    BIT         0xA3
  00A2          +1   101     MOSI    BIT         0xA2
                +1   102     ;******* IIC *******************
  00D8          +1   103     I2CON   DATA    0xD8
  00D9          +1   104     I2STAT  DATA    0xD9
  00DA          +1   105     I2DAT   DATA    0xDA
  00DB          +1   106     I2ADR   DATA    0xDB
  00DC          +1   107     I2SCLL  DATA    0xDC
  00DD          +1   108     I2SCLH  DATA    0xDD
                +1   109     ;------ Bit Addressable --------
  00DE          +1   110     I2EN    BIT         0xDE
  00DD          +1   111     STA         BIT     0xDD
  00DC          +1   112     STO         BIT     0xDC
  00DB          +1   113     SI          BIT     0xDB
  00DA          +1   114     AA          BIT     0xDA
  00D8          +1   115     CRSEL   BIT         0xD8
  0093          +1   116     SDA         BIT     0x93
  0092          +1   117     SCL         BIT     0x92
                +1   118     ;******* Timers ****************
  00CA          +1   119     TPCR2L  DATA    0xCA
  00CB          +1   120     TPCR2H  DATA    0xCB
  0088          +1   121     TCON    DATA    0x88
  0089          +1   122     TMOD    DATA    0x89
  008A          +1   123     TL0         DATA        0x8A
  008C          +1   124     TH0         DATA        0x8C
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     3

  008B          +1   125     TL1         DATA        0x8B
  008D          +1   126     TH1         DATA        0x8D
  00CC          +1   127     TL2         DATA        0xCC
  00CD          +1   128     TH2         DATA        0xCD
  008F          +1   129     TAMOD   DATA    0x8F
                +1   130     ;------- Bit Addressable -------
  008F          +1   131     TF1         BIT     0x8F
  008E          +1   132     TR1         BIT     0x8E
  008D          +1   133     TF0         BIT     0x8D
  008C          +1   134     TR0         BIT     0x8C
  008B          +1   135     IE1         BIT     0x8B
  008A          +1   136     IT1         BIT     0x8A
  0089          +1   137     IE0         BIT     0x89
  0088          +1   138     IT0         BIT     0x88
  00CF          +1   139     PLLEN   BIT         0xCF
  00CE          +1   140     HLTRN   BIT         0xCE
  00CD          +1   141     HLTEN   BIT         0xCD
  00CC          +1   142     ALTCD   BIT         0xCC
  00CB          +1   143     ALTAB   BIT         0xCB
  00CA          +1   144     TDIR2   BIT         0xCA
  00C9          +1   145     TMOD21  BIT         0xC9
  00C8          +1   146     TMOD20  BIT         0xC8
  0087          +1   147     T1          BIT     0x87
  0092          +1   148     T0          BIT     0x92
                +1   149     ;******* Capture/Compare Unit **
  00EA          +1   150     CCCRA   DATA    0xEA
  00EB          +1   151     CCCRB   DATA    0xEB
  00EC          +1   152     CCCRC   DATA    0xEC
  00ED          +1   153     CCCRD   DATA    0xED
  00C8          +1   154     TCR20   DATA    0xC8
  00F9          +1   155     TCR21   DATA    0xF9
  00C9          +1   156     TICR2   DATA    0xC9
  00DE          +1   157     TISE2   DATA    0xDE
  00E9          +1   158     TIFR2   DATA    0xE9
  00CE          +1   159     TOR2L   DATA    0xCE
  00CF          +1   160     TOR2H   DATA    0xCF
                +1   161     ;******* Input Capture *********
  00AA          +1   162     ICRAL   DATA    0xAA
  00AB          +1   163     ICRAH   DATA    0xAB
  00AE          +1   164     ICRBL   DATA    0xAE
  00AF          +1   165     ICRBH   DATA    0xAF
                +1   166     ;------- Bit Addressable -------
  00A7          +1   167     ICA         BIT     0xA7
  00A0          +1   168     ICB         BIT     0xA0
                +1   169     ;******* Output Compare ********
  00EE          +1   170     OCRAL   DATA    0xEE
  00EF          +1   171     OCRAH   DATA    0xEF
  00FA          +1   172     OCRBL   DATA    0xFA
  00FB          +1   173     OCRBH   DATA    0xFB
  00FC          +1   174     OCRCL   DATA    0xFC
  00FD          +1   175     OCRCH   DATA    0xFD
  00FE          +1   176     OCRDL   DATA    0xFE
  00FF          +1   177     OCRDH   DATA    0xFF
                +1   178     ;------- Bit Addressable -------
  00A1          +1   179     OCD         BIT     0xA1
  0097          +1   180     OCC         BIT     0x97
  0096          +1   181     OCB         BIT     0x96
  00A6          +1   182     OCA         BIT     0xA6
                +1   183     ;******* Watchdog **************
  00C2          +1   184     WFEED1  DATA    0xC2
  00C3          +1   185     WFEED2  DATA    0xC3
  00C1          +1   186     WDL         DATA        0xC1
  00A7          +1   187     WDCON   DATA    0xA7
                +1   188     ;******* Real Time Clock *******
  00D3          +1   189     RTCL    DATA    0xD3
  00D2          +1   190     RTCH    DATA    0xD2
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     4

  00D1          +1   191     RTCCON  DATA    0xD1
                +1   192     ;******* Interrupts ************
  00A8          +1   193     IEN0    DATA    0xA8
  00E8          +1   194     IEN1    DATA    0xE8
  00B8          +1   195     IP0         DATA        0xB8
  00B7          +1   196     IP0H    DATA    0xB7
  00F8          +1   197     IP1         DATA        0xF8
  00F7          +1   198     IP1H    DATA    0xF7
                +1   199     ;------- Bit Addressable -------
  00AF          +1   200     EA          BIT     0xAF
  00AE          +1   201     EWDRT   BIT         0xAE
  00AD          +1   202     EBO         BIT     0xAD
  00AC          +1   203     ES          BIT     0xAC
  00AC          +1   204     ESR         BIT     0xAC
  00AB          +1   205     ET1         BIT     0xAB
  00AA          +1   206     EX1         BIT     0xAA
  00A9          +1   207     ET0         BIT     0xA9
  00A8          +1   208     EX0         BIT     0xA8
  00EF          +1   209     EIEE    BIT         0xEF
  00EE          +1   210     EST         BIT     0xEE
  00EC          +1   211     ECCU    BIT         0xEC
  00EB          +1   212     ESPI    BIT         0xEB
  00EA          +1   213     EC          BIT     0xEA
  00E9          +1   214     EKBI    BIT         0xE9
  00E8          +1   215     EI2C    BIT         0xE8
  00BE          +1   216     PWDRT   BIT         0xBE
  00BD          +1   217     PB0         BIT     0xBD
  00BC          +1   218     PS          BIT     0xBC
  00BC          +1   219     PSR         BIT     0xBC
  00BB          +1   220     PT1         BIT     0xBB
  00BA          +1   221     PX1         BIT     0xBA
  00B9          +1   222     PT0         BIT     0xB9
  00B8          +1   223     PX0         BIT     0xB8
  00FF          +1   224     PIEE    BIT         0xFF
  00FE          +1   225     PST         BIT     0xFE
  00FC          +1   226     PCCU    BIT         0xFC
  00FB          +1   227     PSPI    BIT         0xFB
  00FA          +1   228     PCL     BIT         0xFA
  00F9          +1   229     PKBI    BIT         0xF9
  00F8          +1   230     PI2C    BIT         0xF8
  0095          +1   231     RST         BIT     0x95
  0094          +1   232     INT1    BIT         0x94
  0093          +1   233     INT0    BIT         0x93
                +1   234     
                +1   235     
                +1   236     
                +1   237     
                +1   238     
                +1   239     
                +1   240     
                +1   241     
                +1   242     
                +1   243     
                +1   244     
                +1   245     
                +1   246     
                +1   247     
                +1   248     
                     249     
                     250     
  00A0               251       incBit   equ P2.0                     ;switch 1
  0081               252       decBit   equ P0.1                             ;switch 4
  00A3               253       funBit   equ P2.3                             ;switch 7
  0086               254       LEDbit0  equ P0.6                             ;LED 4 [amber]/bit 0
  00A7               255       LEDbit1  equ P2.7                             ;LED 3 [green]/bit 1
  0085               256       LEDbit2  equ P0.5                             ;LED 2 [yellow]/bit 2
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     5

  00A4               257       LEDbit3  equ P2.4                             ;LED 1 [red]/bit 3
  0097               258       speaker  equ P1.7                             ;Speaker
  0094               259       dice     equ P1.4                             ;Toggle dice mode  [Switch 5]
  00A2               260       songButton  equ P2.2                  ;Play song mode [Switch 9]
  00A1               261       soundBoardButton      equ P2.1                ;Play
                     262     
  00A4               263       LED1     equ P2.4                             ;LED1
  0085               264       LED2     equ P0.5                             ;LED2
  00A7               265       LED3     equ P2.7                             ;LED3
  0086               266       LED4     equ P0.6                             ;LED4
  0096               267       LED5     equ P1.6                             ;LED5
  0084               268       LED6     equ P0.4                         ;LED6
  00A5               269       LED7     equ P2.5                             ;LED7
  0087               270       LED8     equ P0.7                             ;LED8
  00A6               271       LED9     equ P2.6                             ;LED9
                     272     
----                 273       cseg at 0
0000 020000   F      274             ljmp main                                       ;jump to main functionality
                     275     
                     276       mydata segment data
----                 277       rseg mydata
                     278     
0000                 279       count: ds 1
0001                 280       timerValue: ds 1
0002                 281       compareValue: ds 1
0003                 282       resetValue: ds 1
                     283     
                     284     
                     285     
0004                 286       sixteenthNotes: ds 1
0005                 287       notePos: ds 1
                     288     
                     289       mybits segment bit
----                 290       rseg mybits
                     291     
0000                 292       playSound: dbit 1
0001                 293       diceMode:  dbit 1
0002                 294       soundBoardEnable: dbit 1
                     295     
                     296       prog segment code
----                 297       rseg prog
                     298     
0000                 299     main:
0000 75A400          300             mov P2M1,  #0                           ;set port modes to bi-directional
0003 759100          301             mov P1M1,  #0
0006 758400          302             mov P0M1,  #0
0009 750000   F      303             mov count, #0                           ;initalize count
000C 75815F          304             mov SP, #5Fh                            ;Set up stack pointer
000F 750031   F      305             mov timerValue, #256-207        ;Set inital timer value for 742Hz
0012 C200     F      306             clr diceMode                            ;Dice mode off by default
0014 C200     F      307             clr soundBoardEnable            ;
0016 750010   F      308             mov compareValue,#16            ;Set value to overflow at
0019 75000F   F      309             mov resetValue,#15                      ;Value to reset on underflow
001C                 310     loop:
001C C200     F      311             clr playSound                           ;reset the sound bit
001E 200063   F      312             jb soundBoardEnable, skipSong
0021 20A018          313             jb incBit, skipIncrease         ;skip increasing if button is not pressed
0024 0500     F      314             inc count                                   ;increment count
0026 E500     F      315             mov A, count                        ;load count to check for overflow
0028 C3              316             clr c                                           ;clear carry for subtract
0029 9500     F      317             subb A, compareValue            ;see if they are equal
002B 7005            318             jnz skipSound1                          ;don't play the sound if not equal
002D D200     F      319                     setb playSound                  ;say to play the sound
002F 750000   F      320                     mov count, #0                   ;set count to 0
0032                 321     skipSound1:
0032 1100     F      322             acall updateLights                      ;update lights
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     6

0034 300002   F      323             jnb playSound, doneSound        ;skip sound if there isn't overflow
0037 1100     F      324                     acall makeSound                 ;make the sound
0039                 325     doneSound:
0039 30A0FD          326                     jnb incBit, doneSound   ;stay until the button is released
003C                 327     skipIncrease:
003C 208118          328             jb decBit, skipDecrease         ;skip decreasing if button is not pressed
003F E500     F      329             mov A, count                            ;load count
0041 C3              330             clr c                                           ;clear carry for subb
0042 9401            331             subb A, #1                                      ;add one
0044 F500     F      332             mov count, A                            ;put value back into count
0046 5005            333             jnc skipSound2                          ;don't play the sound unless there's overfl
                             ow
0048 D200     F      334                     setb playSound                  ;say to play the sound
004A 850000   F      335                     mov count,resetValue    ;Reload the counter
004D                 336     skipSound2:
004D 1100     F      337             acall updateLights                      ;update lights
004F 300002   F      338             jnb playSound, doneSound2       ;skip sound if there isn't overflow
0052 1100     F      339                     acall makeSound                 ;make the sound
0054                 340     doneSound2:
0054 3081FD          341                     jnb decBit, doneSound2  ;This is to prevent one button press to count as ma
                             ny
0057                 342     skipDecrease:
0057 209422          343             jb dice, skipSwap                       ;skip swaping modes if button isn't pushed
005A 30000F   F      344                     jnb diceMode, setDice   ;set mode to dice mode
005D C200     F      345                     clr diceMode                    ;Dice mode off
005F 750010   F      346                     mov compareValue, #16   ;Set value to overflow at 16
0062 75000F   F      347                     mov resetValue, #15             ;Value to reset on underflow
0065 750000   F      348                     mov count, #0                   ;reset counter
0068 1100     F      349                     acall blackOut                  ;update lights for new count
006A 800D            350                     sjmp holdButton                 ;hold until button is released
006C                 351     setDice:
006C D200     F      352                     setb diceMode                   ;Dice mode on
006E 750007   F      353                     mov compareValue, #7    ;overflow at 7
0071 750006   F      354                     mov resetValue, #6              ;re-roll to 6
0074 750000   F      355                     mov count, #0                   ;reset counter
0077 1100     F      356                     acall blackOut                  ;update lights for new count
0079                 357     holdButton:
0079 3094FD          358                     jnb dice, holdButton    ;stay until the button is released
007C                 359     skipSwap:
007C 20A205          360         jb songButton, skipSong
007F 200002   F      361         jb diceMode, skipSong
0082 1100     F      362         acall theFinalCountdown
                     363     
                     364     
0084                 365     skipSong:
0084 20A107          366             jb soundBoardButton, checkSoundEnable
0087 1100     F      367             acall blackOut
0089 B200     F      368             cpl soundBoardEnable
008B                 369     soundBoardButtonLoop:
008B 30A1FD          370             jnb soundBoardButton, soundBoardButtonLoop
008E                 371     checkSoundEnable:
008E 300002   F      372         jnb soundBoardEnable, skipSoundBoard
0091 1100     F      373             acall soundBoard
0093                 374     skipSoundBoard:
0093 8087            375             sjmp loop                                       ;loop back
                     376     
0095                 377     updateLights:
0095 200013   F      378             jb diceMode, diceLights         ;jump to dice mode if it is enabled
0098 E500     F      379                     mov A, count                    ;load count for rotating
009A 13              380                     rrc A                                   ;put zeroth bit into carry
009B B3              381                     cpl c                                   ;active low
009C 9286            382                     mov LEDbit0, c                  ;light LED0 if set
009E 13              383                     rrc A                                   ;1st bit
009F B3              384                     cpl c                                   ;active low
00A0 92A7            385                     mov LEDbit1, c                  ;LED 1
00A2 13              386                     rrc A                                   ;2nd bit
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     7

00A3 B3              387                     cpl c                                   ;active low
00A4 9285            388                     mov LEDbit2, c                  ;LED 2
00A6 13              389                     rrc A                                   ;3rd bit [last bit]
00A7 B3              390                     cpl c                                   ;active low
00A8 92A4            391                     mov LEDbit3, c                  ;LED 3
00AA 22              392                     ret
00AB                 393     diceLights:
00AB E500     F      394                     mov A, count                    ;move count into A
00AD 900000   F      395                     mov DPTR, #dicebitArray ;move array start into DPTR
00B0 93              396                     movc A, @A + DPTR               ;load bit into a
00B1 13              397                     rrc A                                   ;rotate bit into c
00B2 E500     F      398                     mov A, count                    ;load count into A
00B4 900000   F      399                     mov DPTR, #diceArray    ;move array start into DPTR
00B7 93              400                     movc A, @A + DPTR               ;load value into A
00B8 92A4            401                     mov LED1, c                             ;light LED1 if needed
00BA 13              402                     rrc A                                   ;get lowest bit into A
00BB 92A6            403                     mov LED9, c                             ;LED9
00BD 13              404                     rrc A                                   ;same thing
00BE 9287            405                     mov LED8, c                             ;repeat for all remaining LED's...
00C0 13              406                     rrc A
00C1 92A5            407                     mov LED7, c
00C3 13              408                     rrc A
00C4 9284            409                     mov LED6, c
00C6 13              410                     rrc A
00C7 9296            411                     mov LED5, c
00C9 13              412                     rrc A
00CA 9286            413                     mov LED4, c
00CC 13              414                     rrc A
00CD 92A7            415                     mov LED3, c
00CF 13              416                     rrc A
00D0 9285            417                     mov LED2, c                             ;done
00D2 22              418                     ret
                     419     
00D3                 420     blackOut:                                               ;turn off all the lights
00D3 D2A4            421             setb LED1                                       ;LED1...
00D5 D285            422             setb LED2
00D7 D2A7            423             setb LED3
00D9 D286            424             setb LED4
00DB D296            425             setb LED5
00DD D284            426             setb LED6
00DF D2A5            427             setb LED7
00E1 D287            428             setb LED8
00E3 D2A6            429             setb LED9                                       ;...LED9
00E5 22              430             ret
                     431     
00E6                 432     makeSound:
00E6 758902          433             mov TMOD, #00000010b            ;Timer 0 = 8-bit auto reload
00E9 85008C   F      434             mov TH0, timerValue                     ;load reload value
00EC 85008A   F      435             mov TL0, timerValue                     ;load default value
00EF D28C            436             setb TR0                                        ;turn on timer 0
00F1 C28D            437             clr TF0                                         ;clear timer 0 overflow
00F3 7F05            438             mov r7, #5                                      ;loop for a while
00F5                 439     startLoop:
00F5 7E00            440                     mov r6, #0                              ;inner loop to make sound last long
                             er
00F7                 441     innerLoop:
00F7 7818            442                             mov r0, #24                     ;load number of times to loop for t
                             he frequency
00F9                 443     delayLoop:
00F9 308DFD          444                             jnb TF0, delayLoop      ;delay until timer overflows
00FC C28D            445                             clr TF0                         ;clear timer overflow
00FE D8F9            446                             djnz r0, delayLoop      ;jump back to the delayLoop the proper numb
                             er of times
0100 B297            447                     cpl speaker                             ;flip the speaker
0102 DEF3            448                     djnz r6, innerLoop              ;make the sound last longer [inner]
0104 DFEF            449             djnz r7, startLoop                      ;make the sound last longer [outer]
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     8

0106 C28C            450             clr TR0                                         ;done with the timer; turn it off
0108 22              451             ret                                                     ;return
                     452     
                     453     ;LED's 2-9 [9 is least significant, 1 is most signficant
                     454     ;                     0,         1,         2,             3,             4,             5,
                                              6
0109 FFEFFEEE        455     diceArray: db 11111111b, 11101111b, 11111110b, 11101110b, 10111010b, 10101010b, 10010010b
010D BAAA92                  
                     456     
                     457     ;LED 1
                     458     ;                0, 1, 2, 3, 4, 5, 6
0110 01010000        459     dicebitArray: db 1, 1, 0, 0, 0, 0, 0
0114 000000                  
                     460     
0117                 461     theFinalCountdown:                      ;Play song
0117 900000   F      462       mov DPTR, #theFinalCountdownNotes     ;move array start into DPTR
011A 750000   F      463       mov notePos, #0
011D                 464     playNoteLoop:
011D E500     F      465       mov A, notePos
011F 93              466       movc A, @A + DPTR                     ;Read in freq coefficient
0120 F500     F      467       mov sixteenthNotes, A
0122 0500     F      468       inc notePos                           ;Go to next byte
0124 E500     F      469       mov A, notePos
0126 93              470       movc A, @A + DPTR                     ;Read in number of sixteenth notes
0127 F500     F      471       mov timerValue, A
0129 0500     F      472       inc notePos
012B 4500     F      473       orl A, sixteenthNotes                     ;Check if both sixteenthNotes and timerValue ar
                             e zero. Sixteenth already there.
012D 6004            474       jz playNoteReturn
012F 1100     F      475       acall playNote                        ;Play notes
0131 80EA            476       sjmp playNoteLoop                     ;Jump to top of loop
0133                 477     playNoteReturn:
0133 22              478       ret
                     479     
0134                 480     playNote: ;New makeSound function.  Not clean but easier than trying to modify code and pot
                             entially breaking someone else's stuff
                     481               ;If given a 1, it plays a single period for the freq.  The coefficient will be ho
                             w many period to play. 
                     482               ;timerValue needs to be set and is satisfies this equation: timerValue = 255-some
                             _number ;;; ticks_per_half_period = 10 * some_number
                     483               ;sixteenthNotes needs to be set and is the number of periods you want to play.  
                     484                       ;The notes are given in periods because each freq will play for longer or
                              shorter making ticks unreliable.
0134 758902          485       mov TMOD, #00000010b          ;Timer 0 = 8-bit auto reload
0137 85008C   F      486       mov TH0, timerValue                   ;load reload value.
013A 85008A   F      487       mov TL0, timerValue                   ;load default value
013D D28C            488       setb TR0                              ;turn on timer 0
013F C28D            489       clr TF0                               ;clear timer 0 overflow
                     490     
0141                 491       noteLoop:
0141 7E28            492             mov r6, #40                             ;Coefficient to for num periods.  
0143                 493         freqLoop:
0143 780A            494           mov r0, #10                       ;Coefficient to for freq.  Ticks_for_half_period = 
                             10 * some_number
0145                 495           timerLoop:
0145 308DFD          496             jnb TF0, timerLoop              ;delay until timer overflows
0148 C28D            497             clr TF0                                         ;clear timer overflow
014A D8F9            498             djnz r0, timerLoop              ;jump back to the timerLoop the proper number of ti
                             mes
014C B297            499           cpl speaker                       ;flip the speaker
014E DEF3            500           djnz r6, freqLoop         
0150 D500EE   F      501         djnz sixteenthNotes, noteLoop         ;Number of periods
                     502     
0153 C28C            503       clr TR0                               ;done with the timer; turn it off
0155 22              504       ret                                   ;return
                     505     
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE     9

                     506     
0156                 507     soundBoard:
0156 1100     F      508       acall blackOut
0158 C2A5            509       clr LED7
015A                 510     soundLED1:
015A 20A00A          511       jb incBit, soundLED2
015D C2A4            512       clr LED1
015F 750005   F      513       mov sixteenthNotes, #5
0162 750062   F      514       mov timerValue, #98
0165 1100     F      515       acall playNote
0167                 516     soundLED2:
0167 20810A          517       jb decBit, soundLED3
016A C285            518       clr LED2
016C 750005   F      519       mov sixteenthNotes, #5
016F 750059   F      520       mov timerValue, #89
0172 1100     F      521       acall playNote
0174                 522     soundLED3:
0174 20A30A          523       jb funBit, soundLED4
0177 C2A7            524       clr LED3
0179 750005   F      525       mov sixteenthNotes, #5
017C 7500A2   F      526       mov timerValue, #162
017F 1100     F      527       acall playNote
0181                 528     soundLED4:
0181 209420          529       jb dice, soundReturn
0184 C296            530       clr LED5
0186 900000   F      531       mov DPTR, #theFinalCountdownNotes 
0189 750042   F      532       mov notePos, #66
018C                 533     loopSoundB:
018C E500     F      534       mov A, notePos
018E 93              535       movc A, @A + DPTR                     ;Read in freq coefficient
018F F500     F      536       mov sixteenthNotes, A
0191 0500     F      537       inc notePos                           ;Go to next byte
0193 E500     F      538       mov A, notePos
0195 93              539       movc A, @A + DPTR                     ;Read in number of sixteenth notes
0196 F500     F      540       mov timerValue, A
0198 0500     F      541       inc notePos
019A E500     F      542       mov A, notePos
019C 645C            543       xrl A, #92                     ;Check if both sixteenthNotes and timerValue are zero. Six
                             teenth already there.
019E 6004            544       jz soundReturn
01A0 1100     F      545       acall playNote                        ;Play notes
01A2 80E8            546       sjmp loopSoundB                     ;Jump to top of loop
01A4                 547     soundReturn:
01A4 22              548       ret
                     549     
01A5                 550     theFinalCountdownNotes:
                     551     ;Measure 18
01A5 07A2            552       db 7, 162
01A7 0C59            553       db 12, 89
01A9 1C06            554       db 28, 6
                     555     ;Measure 19
01AB FFFF            556       db 255, 255
01AD 0762            557       db 7, 98
01AF 0759            558       db 7, 89
01B1 0762            559       db 7, 98
01B3 FFFF            560       db 255, 255
01B5 074F            561       db 7, 79
01B7 FFFF            562       db 255, 255
01B9 31A2            563       db 49, 162
                     564     ;Measure 20
01BB 19A2            565       db 25, 162
01BD FFFF            566       db 255, 255
01BF 0762            567       db 7, 98
01C1 0759            568       db 7, 89
01C3 1D62            569       db 29, 98
01C5 1306            570       db 19, 6
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE    10

                     571     ;Measure 21
01C7 FFFF            572       db 255, 255
01C9 0CA2            573       db 12, 162
01CB 0B96            574       db 11, 150
01CD 0CA2            575       db 12, 162
01CF FFFF            576       db 255, 255
01D1 0B96            577       db 11, 150
01D3 FFFF            578       db 255, 255
01D5 0B21            579       db 11, 33
01D7 0CA2            580       db 12, 162
01D9 FFFF            581       db 255, 255
                     582     ;Measure 22
01DB 4296            583       db 66, 150
01DD 0521            584       db 5, 33
01DF 0B96            585       db 11, 150
01E1 4AA2            586       db 74, 162
01E3 0B96            587       db 11, 150
01E5 0CA2            588       db 12, 162
                     589     ;Measure 23
01E7 0E59            590       db 14, 89
01E9 19A2            591       db 25, 162
01EB 1696            592       db 22, 150
01ED 0A21            593       db 10, 33
01EF 1306            594       db 19, 6
01F1 1D62            595       db 29, 98
                     596     ;Measure 24
01F3 3E59            597       db 62, 89
01F5 0D4F            598       db 13, 79
01F7 1662            599       db 22, 98
01F9 074F            600       db 7, 79
01FB 0CA2            601       db 12, 162
                     602     ;Measure 25
01FD 5359            603       db 83, 89
01FF FFFF            604       db 255, 255
                     605     ;Ending Note
0201 0000            606       db 0, 0
                     607     
                     608     
                     609     end
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE    11

SYMBOL TABLE LISTING
------ ----- -------


N A M E                 T Y P E  V A L U E   ATTRIBUTES

AA . . . . . . . . . .  B ADDR   00D8H.2 A   
AC . . . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . . . .  D ADDR   00E0H   A   
ALTAB. . . . . . . . .  B ADDR   00C8H.3 A   
ALTCD. . . . . . . . .  B ADDR   00C8H.4 A   
AUXR1. . . . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . . . .  D ADDR   00F0H   A   
BLACKOUT . . . . . . .  C ADDR   00D3H   R   SEG=PROG
BRGCON . . . . . . . .  D ADDR   00BDH   A   
BRGR0. . . . . . . . .  D ADDR   00BEH   A   
BRGR1. . . . . . . . .  D ADDR   00BFH   A   
CCCRA. . . . . . . . .  D ADDR   00EAH   A   
CCCRB. . . . . . . . .  D ADDR   00EBH   A   
CCCRC. . . . . . . . .  D ADDR   00ECH   A   
CCCRD. . . . . . . . .  D ADDR   00EDH   A   
CHECKSOUNDENABLE . . .  C ADDR   008EH   R   SEG=PROG
CIN1A. . . . . . . . .  B ADDR   0080H.4 A   
CIN1B. . . . . . . . .  B ADDR   0080H.3 A   
CIN2A. . . . . . . . .  B ADDR   0080H.2 A   
CIN2B. . . . . . . . .  B ADDR   0080H.1 A   
CMP1 . . . . . . . . .  D ADDR   00ACH   A   
CMP1O. . . . . . . . .  B ADDR   0080H.6 A   
CMP2 . . . . . . . . .  D ADDR   00ADH   A   
CMP2O. . . . . . . . .  B ADDR   0080H.0 A   
CMPREF . . . . . . . .  B ADDR   0080H.5 A   
COMPAREVALUE . . . . .  D ADDR   0002H   R   SEG=MYDATA
COUNT. . . . . . . . .  D ADDR   0000H   R   SEG=MYDATA
CRSEL. . . . . . . . .  B ADDR   00D8H.0 A   
CY . . . . . . . . . .  B ADDR   00D0H.7 A   
DECBIT . . . . . . . .  B ADDR   0080H.1 A   
DEEADR . . . . . . . .  D ADDR   00F3H   A   
DEECON . . . . . . . .  D ADDR   00F1H   A   
DEEDAT . . . . . . . .  D ADDR   00F2H   A   
DELAYLOOP. . . . . . .  C ADDR   00F9H   R   SEG=PROG
DICE . . . . . . . . .  B ADDR   0090H.4 A   
DICEARRAY. . . . . . .  C ADDR   0109H   R   SEG=PROG
DICEBITARRAY . . . . .  C ADDR   0110H   R   SEG=PROG
DICELIGHTS . . . . . .  C ADDR   00ABH   R   SEG=PROG
DICEMODE . . . . . . .  B ADDR   0000H.1 R   SEG=MYBITS
DIVM . . . . . . . . .  D ADDR   0095H   A   
DONESOUND. . . . . . .  C ADDR   0039H   R   SEG=PROG
DONESOUND2 . . . . . .  C ADDR   0054H   R   SEG=PROG
DPH. . . . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . . . .  B ADDR   00A8H.7 A   
EBO. . . . . . . . . .  B ADDR   00A8H.5 A   
EC . . . . . . . . . .  B ADDR   00E8H.2 A   
ECCU . . . . . . . . .  B ADDR   00E8H.4 A   
EI2C . . . . . . . . .  B ADDR   00E8H.0 A   
EIEE . . . . . . . . .  B ADDR   00E8H.7 A   
EKBI . . . . . . . . .  B ADDR   00E8H.1 A   
ES . . . . . . . . . .  B ADDR   00A8H.4 A   
ESPI . . . . . . . . .  B ADDR   00E8H.3 A   
ESR. . . . . . . . . .  B ADDR   00A8H.4 A   
EST. . . . . . . . . .  B ADDR   00E8H.6 A   
ET0. . . . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . . . .  B ADDR   00A8H.3 A   
EWDRT. . . . . . . . .  B ADDR   00A8H.6 A   
EX0. . . . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . . . .  B ADDR   00A8H.2 A   
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE    12

F0 . . . . . . . . . .  B ADDR   00D0H.5 A   
F1 . . . . . . . . . .  B ADDR   00D0H.1 A   
FE . . . . . . . . . .  B ADDR   0098H.7 A   
FREQLOOP . . . . . . .  C ADDR   0143H   R   SEG=PROG
FUNBIT . . . . . . . .  B ADDR   00A0H.3 A   
HLTEN. . . . . . . . .  B ADDR   00C8H.5 A   
HLTRN. . . . . . . . .  B ADDR   00C8H.6 A   
HOLDBUTTON . . . . . .  C ADDR   0079H   R   SEG=PROG
I2ADR. . . . . . . . .  D ADDR   00DBH   A   
I2CON. . . . . . . . .  D ADDR   00D8H   A   
I2DAT. . . . . . . . .  D ADDR   00DAH   A   
I2EN . . . . . . . . .  B ADDR   00D8H.6 A   
I2SCLH . . . . . . . .  D ADDR   00DDH   A   
I2SCLL . . . . . . . .  D ADDR   00DCH   A   
I2STAT . . . . . . . .  D ADDR   00D9H   A   
ICA. . . . . . . . . .  B ADDR   00A0H.7 A   
ICB. . . . . . . . . .  B ADDR   00A0H.0 A   
ICRAH. . . . . . . . .  D ADDR   00ABH   A   
ICRAL. . . . . . . . .  D ADDR   00AAH   A   
ICRBH. . . . . . . . .  D ADDR   00AFH   A   
ICRBL. . . . . . . . .  D ADDR   00AEH   A   
IE0. . . . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . . . .  D ADDR   00E8H   A   
INCBIT . . . . . . . .  B ADDR   00A0H.0 A   
INNERLOOP. . . . . . .  C ADDR   00F7H   R   SEG=PROG
INT0 . . . . . . . . .  B ADDR   0090H.3 A   
INT1 . . . . . . . . .  B ADDR   0090H.4 A   
IP0. . . . . . . . . .  D ADDR   00B8H   A   
IP0H . . . . . . . . .  D ADDR   00B7H   A   
IP1. . . . . . . . . .  D ADDR   00F8H   A   
IP1H . . . . . . . . .  D ADDR   00F7H   A   
IT0. . . . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . . . .  B ADDR   0088H.2 A   
KB0. . . . . . . . . .  B ADDR   0080H.0 A   
KB1. . . . . . . . . .  B ADDR   0080H.1 A   
KB2. . . . . . . . . .  B ADDR   0080H.2 A   
KB3. . . . . . . . . .  B ADDR   0080H.3 A   
KB4. . . . . . . . . .  B ADDR   0080H.4 A   
KB5. . . . . . . . . .  B ADDR   0080H.5 A   
KB6. . . . . . . . . .  B ADDR   0080H.6 A   
KB7. . . . . . . . . .  B ADDR   0080H.7 A   
KBCON. . . . . . . . .  D ADDR   0094H   A   
KBMASK . . . . . . . .  D ADDR   0086H   A   
KBPATN . . . . . . . .  D ADDR   0093H   A   
LED1 . . . . . . . . .  B ADDR   00A0H.4 A   
LED2 . . . . . . . . .  B ADDR   0080H.5 A   
LED3 . . . . . . . . .  B ADDR   00A0H.7 A   
LED4 . . . . . . . . .  B ADDR   0080H.6 A   
LED5 . . . . . . . . .  B ADDR   0090H.6 A   
LED6 . . . . . . . . .  B ADDR   0080H.4 A   
LED7 . . . . . . . . .  B ADDR   00A0H.5 A   
LED8 . . . . . . . . .  B ADDR   0080H.7 A   
LED9 . . . . . . . . .  B ADDR   00A0H.6 A   
LEDBIT0. . . . . . . .  B ADDR   0080H.6 A   
LEDBIT1. . . . . . . .  B ADDR   00A0H.7 A   
LEDBIT2. . . . . . . .  B ADDR   0080H.5 A   
LEDBIT3. . . . . . . .  B ADDR   00A0H.4 A   
LOOP . . . . . . . . .  C ADDR   001CH   R   SEG=PROG
LOOPSOUNDB . . . . . .  C ADDR   018CH   R   SEG=PROG
MAIN . . . . . . . . .  C ADDR   0000H   R   SEG=PROG
MAKESOUND. . . . . . .  C ADDR   00E6H   R   SEG=PROG
MISO . . . . . . . . .  B ADDR   00A0H.3 A   
MOSI . . . . . . . . .  B ADDR   00A0H.2 A   
MYBITS . . . . . . . .  B SEG    0003H       REL=UNIT
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE    13

MYDATA . . . . . . . .  D SEG    0006H       REL=UNIT
NOTELOOP . . . . . . .  C ADDR   0141H   R   SEG=PROG
NOTEPOS. . . . . . . .  D ADDR   0005H   R   SEG=MYDATA
OCA. . . . . . . . . .  B ADDR   00A0H.6 A   
OCB. . . . . . . . . .  B ADDR   0090H.6 A   
OCC. . . . . . . . . .  B ADDR   0090H.7 A   
OCD. . . . . . . . . .  B ADDR   00A0H.1 A   
OCRAH. . . . . . . . .  D ADDR   00EFH   A   
OCRAL. . . . . . . . .  D ADDR   00EEH   A   
OCRBH. . . . . . . . .  D ADDR   00FBH   A   
OCRBL. . . . . . . . .  D ADDR   00FAH   A   
OCRCH. . . . . . . . .  D ADDR   00FDH   A   
OCRCL. . . . . . . . .  D ADDR   00FCH   A   
OCRDH. . . . . . . . .  D ADDR   00FFH   A   
OCRDL. . . . . . . . .  D ADDR   00FEH   A   
OV . . . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . . . .  D ADDR   0080H   A   
P0M1 . . . . . . . . .  D ADDR   0084H   A   
P0M2 . . . . . . . . .  D ADDR   0085H   A   
P1 . . . . . . . . . .  D ADDR   0090H   A   
P1M1 . . . . . . . . .  D ADDR   0091H   A   
P1M2 . . . . . . . . .  D ADDR   0092H   A   
P2 . . . . . . . . . .  D ADDR   00A0H   A   
P2M1 . . . . . . . . .  D ADDR   00A4H   A   
P2M2 . . . . . . . . .  D ADDR   00A5H   A   
P3 . . . . . . . . . .  D ADDR   00B0H   A   
P3M1 . . . . . . . . .  D ADDR   00B1H   A   
P3M2 . . . . . . . . .  D ADDR   00B2H   A   
PB0. . . . . . . . . .  B ADDR   00B8H.5 A   
PCCU . . . . . . . . .  B ADDR   00F8H.4 A   
PCL. . . . . . . . . .  B ADDR   00F8H.2 A   
PCON . . . . . . . . .  D ADDR   0087H   A   
PCONA. . . . . . . . .  D ADDR   00B5H   A   
PI2C . . . . . . . . .  B ADDR   00F8H.0 A   
PIEE . . . . . . . . .  B ADDR   00F8H.7 A   
PKBI . . . . . . . . .  B ADDR   00F8H.1 A   
PLAYNOTE . . . . . . .  C ADDR   0134H   R   SEG=PROG
PLAYNOTELOOP . . . . .  C ADDR   011DH   R   SEG=PROG
PLAYNOTERETURN . . . .  C ADDR   0133H   R   SEG=PROG
PLAYSOUND. . . . . . .  B ADDR   0000H.0 R   SEG=MYBITS
PLLEN. . . . . . . . .  B ADDR   00C8H.7 A   
PROG . . . . . . . . .  C SEG    0203H       REL=UNIT
PS . . . . . . . . . .  B ADDR   00B8H.4 A   
PSPI . . . . . . . . .  B ADDR   00F8H.3 A   
PSR. . . . . . . . . .  B ADDR   00B8H.4 A   
PST. . . . . . . . . .  B ADDR   00F8H.6 A   
PSW. . . . . . . . . .  D ADDR   00D0H   A   
PT0. . . . . . . . . .  B ADDR   00B8H.1 A   
PT0AD. . . . . . . . .  D ADDR   00F6H   A   
PT1. . . . . . . . . .  B ADDR   00B8H.3 A   
PWDRT. . . . . . . . .  B ADDR   00B8H.6 A   
PX0. . . . . . . . . .  B ADDR   00B8H.0 A   
PX1. . . . . . . . . .  B ADDR   00B8H.2 A   
RB8. . . . . . . . . .  B ADDR   0098H.2 A   
REN. . . . . . . . . .  B ADDR   0098H.4 A   
RESETVALUE . . . . . .  D ADDR   0003H   R   SEG=MYDATA
RI . . . . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . . . .  B ADDR   00D0H.4 A   
RST. . . . . . . . . .  B ADDR   0090H.5 A   
RSTSRC . . . . . . . .  D ADDR   00DFH   A   
RTCCON . . . . . . . .  D ADDR   00D1H   A   
RTCH . . . . . . . . .  D ADDR   00D2H   A   
RTCL . . . . . . . . .  D ADDR   00D3H   A   
RXD. . . . . . . . . .  B ADDR   0090H.1 A   
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE    14

SADDR. . . . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . . . .  D ADDR   0099H   A   
SCL. . . . . . . . . .  B ADDR   0090H.2 A   
SCON . . . . . . . . .  D ADDR   0098H   A   
SDA. . . . . . . . . .  B ADDR   0090H.3 A   
SETDICE. . . . . . . .  C ADDR   006CH   R   SEG=PROG
SI . . . . . . . . . .  B ADDR   00D8H.3 A   
SIXTEENTHNOTES . . . .  D ADDR   0004H   R   SEG=MYDATA
SKIPDECREASE . . . . .  C ADDR   0057H   R   SEG=PROG
SKIPINCREASE . . . . .  C ADDR   003CH   R   SEG=PROG
SKIPSONG . . . . . . .  C ADDR   0084H   R   SEG=PROG
SKIPSOUND1 . . . . . .  C ADDR   0032H   R   SEG=PROG
SKIPSOUND2 . . . . . .  C ADDR   004DH   R   SEG=PROG
SKIPSOUNDBOARD . . . .  C ADDR   0093H   R   SEG=PROG
SKIPSWAP . . . . . . .  C ADDR   007CH   R   SEG=PROG
SM0. . . . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . . . .  B ADDR   0098H.5 A   
SONGBUTTON . . . . . .  B ADDR   00A0H.2 A   
SOUNDBOARD . . . . . .  C ADDR   0156H   R   SEG=PROG
SOUNDBOARDBUTTON . . .  B ADDR   00A0H.1 A   
SOUNDBOARDBUTTONLOOP .  C ADDR   008BH   R   SEG=PROG
SOUNDBOARDENABLE . . .  B ADDR   0000H.2 R   SEG=MYBITS
SOUNDLED1. . . . . . .  C ADDR   015AH   R   SEG=PROG
SOUNDLED2. . . . . . .  C ADDR   0167H   R   SEG=PROG
SOUNDLED3. . . . . . .  C ADDR   0174H   R   SEG=PROG
SOUNDLED4. . . . . . .  C ADDR   0181H   R   SEG=PROG
SOUNDRETURN. . . . . .  C ADDR   01A4H   R   SEG=PROG
SP . . . . . . . . . .  D ADDR   0081H   A   
SPCTL. . . . . . . . .  D ADDR   00E2H   A   
SPDAT. . . . . . . . .  D ADDR   00E3H   A   
SPEAKER. . . . . . . .  B ADDR   0090H.7 A   
SPICLK . . . . . . . .  B ADDR   00A0H.5 A   
SPSTAT . . . . . . . .  D ADDR   00E1H   A   
SS . . . . . . . . . .  B ADDR   00A0H.4 A   
SSTAT. . . . . . . . .  D ADDR   00BAH   A   
STA. . . . . . . . . .  B ADDR   00D8H.5 A   
STARTLOOP. . . . . . .  C ADDR   00F5H   R   SEG=PROG
STO. . . . . . . . . .  B ADDR   00D8H.4 A   
T0 . . . . . . . . . .  B ADDR   0090H.2 A   
T1 . . . . . . . . . .  B ADDR   0080H.7 A   
TAMOD. . . . . . . . .  D ADDR   008FH   A   
TB8. . . . . . . . . .  B ADDR   0098H.3 A   
TCON . . . . . . . . .  D ADDR   0088H   A   
TCR20. . . . . . . . .  D ADDR   00C8H   A   
TCR21. . . . . . . . .  D ADDR   00F9H   A   
TDIR2. . . . . . . . .  B ADDR   00C8H.2 A   
TF0. . . . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . . . .  B ADDR   0088H.7 A   
TH0. . . . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . . . .  D ADDR   00CDH   A   
THEFINALCOUNTDOWN. . .  C ADDR   0117H   R   SEG=PROG
THEFINALCOUNTDOWNNOTES  C ADDR   01A5H   R   SEG=PROG
TI . . . . . . . . . .  B ADDR   0098H.1 A   
TICR2. . . . . . . . .  D ADDR   00C9H   A   
TIFR2. . . . . . . . .  D ADDR   00E9H   A   
TIMERLOOP. . . . . . .  C ADDR   0145H   R   SEG=PROG
TIMERVALUE . . . . . .  D ADDR   0001H   R   SEG=MYDATA
TISE2. . . . . . . . .  D ADDR   00DEH   A   
TL0. . . . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . . . .  D ADDR   0089H   A   
TMOD20 . . . . . . . .  B ADDR   00C8H.0 A   
A51 MACRO ASSEMBLER  MAIN                                                                 04/09/2014 22:22:55 PAGE    15

TMOD21 . . . . . . . .  B ADDR   00C8H.1 A   
TOR2H. . . . . . . . .  D ADDR   00CFH   A   
TOR2L. . . . . . . . .  D ADDR   00CEH   A   
TPCR2H . . . . . . . .  D ADDR   00CBH   A   
TPCR2L . . . . . . . .  D ADDR   00CAH   A   
TR0. . . . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . . . .  B ADDR   0088H.6 A   
TRIM . . . . . . . . .  D ADDR   0096H   A   
TXD. . . . . . . . . .  B ADDR   0090H.0 A   
UPDATELIGHTS . . . . .  C ADDR   0095H   R   SEG=PROG
WDCON. . . . . . . . .  D ADDR   00A7H   A   
WDL. . . . . . . . . .  D ADDR   00C1H   A   
WFEED1 . . . . . . . .  D ADDR   00C2H   A   
WFEED2 . . . . . . . .  D ADDR   00C3H   A   
XTAL1. . . . . . . . .  B ADDR   00B0H.1 A   
XTAL2. . . . . . . . .  B ADDR   00B0H.0 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
